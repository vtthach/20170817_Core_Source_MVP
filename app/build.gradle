apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def VERSION_CODE = 1
def VERSION_NAME = "1.0"
def DIMENSION_DEFAULT = "default"

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "com.igap"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
        multiDexEnabled true
    }

    signingConfigs {
        release {
//            storeFile file("../keystore.jks")
//            storePassword KEYSTORE_PASSWORD
//            keyAlias KEYSTORE_ALIAS
//            keyPassword KEY_PASSWORD
        }

        debug {
//            storeFile file("../keystore.jks")
//            storePassword KEYSTORE_PASSWORD
//            keyAlias KEYSTORE_ALIAS
//            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
            signingConfig signingConfigs.debug
        }
    }

    dependencies {
        repositories {
            jcenter()
        }

        repositories {
            flatDir { dirs '../libs' }
        }
    }

    flavorDimensions DIMENSION_DEFAULT
    productFlavors {
        dev {
            dimension DIMENSION_DEFAULT
        }
        prod {
            dimension DIMENSION_DEFAULT
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError true
        disable 'InvalidPackage' // Some libraries have issues with this
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "igap"
            def SEP = "-"
            def flavor = variant.productFlavors[0].name
            def date = new Date();
            def formattedDate
            if (flavor == "prod") {
                formattedDate = date.format("yyMMddkkmm")
            } else {
                formattedDate = date.format("yyMMdd")
            }
            def version = variant.versionName
            def buildType = variant.variantData.variantConfiguration.buildType.name
            outputFileName = project + SEP + flavor + SEP + buildType + SEP + version + SEP + formattedDate + ".apk" // > Gradle 3.0
        }
    }
}

// Fabric
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.1'
    }
}
// Fabric
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // appcompatV7
    implementation supportDepedencies.appcompatV7
    // appcompatV13
    implementation supportDepedencies.supportV13
    // supportDesignLibrary
    implementation supportDepedencies.supportDesignLibrary
    // constraintLayout
    implementation supportDepedencies.constraintLayout
    // Timber log
    implementation utilDependencies.timber
    // Guava
    implementation utilDependencies.guava
    // Material dialog
    implementation utilDependencies.materialDialog
    // dagger
    implementation utilDependencies.dagger
    // daggerCompiler
    annotationProcessor utilDependencies.daggerCompiler
    // javaxAnnotation
    compileOnly utilDependencies.javaxAnnotation
    // Butter Knife
    implementation utilDependencies.butterKnife
    // butterKnifeCompiler
    annotationProcessor utilDependencies.butterKnifeCompiler
    // rxJava component
    implementation utilDependencies.rxJava
    // Retrofit 2
    implementation(utilDependencies.retrofit) { exclude module: 'okhttp' }
    // retrofitRxjava
    implementation utilDependencies.retrofitRxjava
    // retrofitJsonConverter
    implementation utilDependencies.retrofitJsonConverter
    // okHttp
    implementation utilDependencies.okHttp
    // okHttpInterceptor
    implementation utilDependencies.okHttpInterceptor
    // Gson
    implementation googleDepedencies.gson
    // junit
    testImplementation testDependencies.junit
    // mockito
    testImplementation testDependencies.mockito
    // Fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    // proguard-snippets
    implementation 'com.infstory:proguard-snippets:1.0.0'

    // Retrofit wrapper
    //    implementation(name: 'retrofit_wrapper-1.0', ext: 'aar')
    implementation project(':modules:retrofit_wrapper')
}
